#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ([2.61])
AC_INIT([libmilui], [0.0.1])
AC_CONFIG_SRCDIR([src/misc/misc.c])
AC_CONFIG_HEADERS([MIL_config_linux.h])
AC_CANONICAL_SYSTEM

MilUI_MAJOR_VERSION=0
MilUI_MINOR_VERSION=0
MilUI_MICRO_VERSION=1
MilUI_INTERFACE_AGE=0
MilUI_BINARY_AGE=0
MilUI_VERSION=$MilUI_MAJOR_VERSION.$MilUI_MINOR_VERSION.$MilUI_MICRO_VERSION

AC_SUBST(MilUI_MAJOR_VERSION)
AC_SUBST(MilUI_MINOR_VERSION)
AC_SUBST(MilUI_MICRO_VERSION)
AC_SUBST(MilUI_INTERFACE_AGE)
AC_SUBST(MilUI_BINARY_AGE)
AC_SUBST(MilUI_VERSION)

dnl ========================================================================
dnl libtool versioning
LT_RELEASE=$MilUI_MAJOR_VERSION.$MilUI_MINOR_VERSION
LT_CURRENT=`expr $MilUI_MICRO_VERSION - $MilUI_INTERFACE_AGE`
LT_REVISION=$MilUI_INTERFACE_AGE
LT_AGE=`expr $MilUI_BINARY_AGE - $MilUI_INTERFACE_AGE`

AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

AC_CANONICAL_SYSTEM

AM_INIT_AUTOMAKE([foreign no-define])

dnl ========================================================================
AC_C_BIGENDIAN
if test x$ac_cv_c_bigendian = xyes; then
    AC_DEFINE(MIL_BYTEORDER, 4321, [Make sure byte order.])
else
    AC_DEFINE(MIL_BYTEORDER, 1234, [Make sure byte order.])
fi

dnl Check for tools
AC_PROG_LIBTOOL
AC_PROG_CC
AC_PROG_LD
AC_PROG_RANLIB
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET

dnl ========================================================================
case "$host" in
    *-*-cygwin*)
        # We build MIL on cygwin without the UNIX emulation layer
        BASE_CFLAGS="-I/usr/include/mingw -mno-cygwin"
        BASE_LDFLAGS="-mno-cygwin"
        ;;
    *)
        BASE_CFLAGS="-D_GNU_SOURCE=1"
        BASE_LDFLAGS=""
        ;;
esac
BUILD_CFLAGS="$CFLAGS $CPPFLAGS"
BUILD_LDFLAGS="$LDFLAGS"
EXTRA_LDFLAGS="$BASE_LDFLAGS"
MIL_CFLAGS="$BASE_CFLAGS"
MIL_LIBS="-lMIL $BASE_LDFLAGS"
LDFLAGS="$LDFLAGS $EXTRA_LDFLAGS"

dnl Checks for header files.
AC_HEADER_DIRENT

# Checks for libraries.

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_C_VOLATILE
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM

enable_video_dummy="yes"
enable_video_fbcon="yes"
enable_video_qvfb="yes"

dnl Checks for library functions.
dnl Set up the Null video driver.
CheckDummyVideo()
{
    AC_ARG_ENABLE(videodummy,
[  --enable-videodummy      include Dummy Video Device engine <default=yes>],
    enable_video_dummy=$enableval)

    if test "x$enable_video_dummy" = "xyes"; then
      AC_DEFINE(MIL_VIDEO_DRIVER_DUMMY, 1, 
                [Define if include Dummy Video Device engine])
      VIDEO_SUBDIRS="$VIDEO_SUBDIRS dummy"
      VIDEO_DRIVERS="$VIDEO_DRIVERS dummy/libdummyvideo.la"
    fi
}

dnl Check Qt Virtual FrameBuffer
CheckQVFB()
{
    AC_ARG_ENABLE(videoqvfb,
[  --enable-videoqvfb       include Qt Virtual FrameBuffer Video Device engine <default=yes>],
    enable_video_qvfb=$enableval)

    if test "x$enable_video_qvfb" = "xyes"; then
        AC_DEFINE(MIL_VIDEO_DRIVER_QVFB, 1, 
                [Define if include Qt Virtual FrameBuffer Video Device engine])
        VIDEO_SUBDIRS="$VIDEO_SUBDIRS qvfb"
        VIDEO_DRIVERS="$VIDEO_DRIVERS qvfb/libqvfbvideo.la"
    fi
}

dnl Find the framebuffer console includes
CheckFBCON()
{
    AC_ARG_ENABLE(videofbcon,
[  --enable-videofbcon      include FrameBuffer console Video Device engine <default=yes>],
    enable_video_fbcon=$enableval)
    if test x$enable_video_fbcon = xyes; then
        AC_MSG_CHECKING(for FrameBuffer console support)
        video_fbcon=no
        AC_TRY_COMPILE([
         #include <linux/fb.h>
         #include <linux/kd.h>
         #include <linux/keyboard.h>
        ],[
        ],[
        video_fbcon=yes
        ])
        AC_MSG_RESULT($video_fbcon)
        if test x$video_fbcon = xyes; then
            AC_DEFINE(MIL_VIDEO_DRIVER_FBCON, 1, 
                [Define if include FrameBuffer console Video Device engine])

            have_pciaccess="yes"
            AC_CHECK_LIB(pciaccess, pci_system_init,
                SYSTEM_LIBS="$SYSTEM_LIBS -lpciaccess", have_pciaccess="no")

            if test x$have_pciaccess = xyes; then
                AC_DEFINE(MIL_HAVE_PCIACCESS, 1, 
                [Define if PCIAccess lib is available])
            fi
        fi
    fi
}


dnl Checks Video Device Engine.
{
  CheckDummyVideo
  CheckQVFB
  CheckFBCON
}

dnl See whether we are allowed to use the system C library
AC_ARG_ENABLE(libc,
AC_HELP_STRING([--enable-libc], [Use the system C library [[default=yes]]]),
              , enable_libc=yes)
if test x$enable_libc = xyes; then
    AC_DEFINE(HAVE_LIBC, 1, [Have system C library.])

    dnl Check for C library headers
    AC_HEADER_STDC
    AC_CHECK_HEADERS(sys/types.h stdio.h stdlib.h stddef.h stdarg.h sys/time.h termio.h unistd.h locale.h malloc.h memory.h string.h strings.h inttypes.h stdint.h ctype.h math.h iconv.h signal.h)

    dnl Check for typedefs, structures, etc.
    AC_TYPE_SIZE_T
    if test x$ac_cv_header_inttypes_h = xyes -o x$ac_cv_header_stdint_h = xyes; then
        AC_CHECK_TYPE(int64_t)
        if test x$ac_cv_type_int64_t = xyes; then
            AC_DEFINE(MIL_HAS_64BIT_TYPE, 1, [Has 64bits integer type.])
        fi
        have_inttypes=yes
    fi

    dnl Checks for library functions.
    case "$host" in
    *-*-cygwin* | *-*-mingw32*)
        ;;
    *)
        AC_FUNC_ALLOCA
        ;;
    esac

    AC_FUNC_MMAP
    AC_FUNC_VPRINTF
    AC_FUNC_MEMCMP
    if test x$ac_cv_func_memcmp_working = xyes; then
        AC_DEFINE(HAVE_MEMCMP, 1, [Have func memcmp.])
    fi
    AC_FUNC_STRTOD
    if test x$ac_cv_func_strtod = xyes; then
        AC_DEFINE(HAVE_STRTOD, 1, [Have func strtod.])
    fi
    AC_CHECK_FUNC(mprotect,
        AC_TRY_COMPILE([
          #include <sys/types.h>
          #include <sys/mman.h>
        ],[
        ],[
        AC_DEFINE(HAVE_MPROTECT, 1, [Have func mprotect.])
        ]),
    )
    AC_CHECK_FUNCS(malloc calloc realloc free getenv putenv unsetenv qsort abs bcopy memset memcpy memmove strlen strlcpy strlcat strdup _strrev _strupr _strlwr strchr strrchr strstr itoa _ltoa _uitoa _ultoa strtol strtoul _i64toa _ui64toa strtoll strtoull atoi atof strcmp strncmp _stricmp strcasecmp _strnicmp strncasecmp sscanf snprintf vsnprintf iconv sigaction setjmp nanosleep time mktime localtime strerror setlocale getpt)

    AC_CHECK_LIB(iconv, libiconv_open, [EXTRA_LDFLAGS="$EXTRA_LDFLAGS -liconv"])
    AC_CHECK_LIB(m, pow, [EXTRA_LDFLAGS="$EXTRA_LDFLAGS -lm"])
fi

if test x$have_inttypes != xyes; then
    AC_CHECK_SIZEOF(char, 1)
    AC_CHECK_SIZEOF(short, 2)
    AC_CHECK_SIZEOF(int, 4)
    AC_CHECK_SIZEOF(long, 4)
    AC_CHECK_SIZEOF(long long, 8)
    if test x$ac_cv_sizeof_char = x1; then
        AC_DEFINE(int8_t, signed char, [Define int8_t])
        AC_DEFINE(uint8_t, unsigned char, [Define int8_t])
    fi
    if test x$ac_cv_sizeof_short = x2; then
        AC_DEFINE(int16_t, signed short, [Define int16_t])
        AC_DEFINE(uint16_t, unsigned short, [Define, uint16_t])
    else
        if test x$ac_cv_sizeof_int = x2; then
            AC_DEFINE(int16_t, signed int, [Define int16_t])
            AC_DEFINE(uint16_t, unsigned int, [Define uint16_t])
        fi
    fi
    if test x$ac_cv_sizeof_int = x4; then
        AC_DEFINE(int32_t, signed int, [Define int32_t])
        AC_DEFINE(uint32_t, unsigned int, [Define uint32_t])
    else
        if test x$ac_cv_sizeof_long = x4; then
            AC_DEFINE(int32_t, signed long, [Define int32_t])
            AC_DEFINE(uint32_t, unsigned long, [Define uint32_t])
        fi
    fi
    if test x$ac_cv_sizeof_long = x8; then
        AC_DEFINE(int64_t, signed long, [Define int64_t])
        AC_DEFINE(uint64_t, unsigned long, [Define uint64_t])
        AC_DEFINE(MIL_HAS_64BIT_TYPE, 1, [Has 64 bits integer type.])
    else
        if test x$ac_cv_sizeof_long_long = x8; then
            AC_DEFINE(int64_t, signed long long, [Define int64_t])
            AC_DEFINE(uint64_t, unsigned long long, [Define uint64_t])
            AC_DEFINE(MIL_HAS_64BIT_TYPE, 1, [Has 64 bits integer type.])
        fi
    fi
    AC_DEFINE(size_t, unsigned int, [Define size_t])
    AC_DEFINE(uintptr_t, unsigned long, [Define uintptr_t])
fi


have_pthreads=no
if test "x$use_threads" != "xno"; then
  AC_MSG_CHECKING(for pthread library)
  TMP_SAVE_LIBS=$LIBS
  AC_TRY_LINK([
#include "confdefs.h"
#define __C_ASM_H /* fix for retarded Digital Unix headers */
#include <pthread.h>],[
void foo(void)
{
pthread_exit (0);
}
],
    have_pthreads=yes
    AC_MSG_RESULT(yes),
    AC_MSG_RESULT(no))
    LIBS=$TMP_SAVE_LIBS
    AC_DEFINE(HAVE_PTHREAD, 1,
            [Define if there have libpthread.])

fi

if test "x$have_pthreads" != "xno"; then
# Check to see if recursive mutexes are available
AC_MSG_CHECKING(for recursive mutexes)
has_recursive_mutexes=no
if test x$has_recursive_mutexes = xno; then
    AC_TRY_COMPILE([
                    #include <pthread.h>
                    ],[
                       pthread_mutexattr_t attr;
                       pthread_mutexattr_settype(&attr, PTHREAD_MUTEX_RECURSIVE);
                       ],[
                          has_recursive_mutexes=yes
                          AC_DEFINE(MIL_THREAD_PTHREAD_RECURSIVE_MUTEX, 1, [pthread support recursive mutex])
                          ])
    fi
    if test x$has_recursive_mutexes = xno; then
        AC_TRY_COMPILE([
                        #include <pthread.h>
                        ],[
                           pthread_mutexattr_t attr;
                           pthread_mutexattr_setkind_np(&attr, PTHREAD_MUTEX_RECURSIVE_NP);
                           ],[
                              has_recursive_mutexes=yes
                              AC_DEFINE(MIL_THREAD_PTHREAD_RECURSIVE_MUTEX_NP, 1, [pthread support recursive np mutex])
                              ])
        fi
        AC_MSG_RESULT($has_recursive_mutexes)
fi


AC_DEFINE_UNQUOTED(MILUI_MAJOR_VERSION, $MilUI_MAJOR_VERSION,
            [Major version of MilUI])
AC_DEFINE_UNQUOTED(MILUI_MINOR_VERSION, $MilUI_MINOR_VERSION,
            [Minor version of MilUI])
AC_DEFINE_UNQUOTED(MILUI_MICRO_VERSION, $MilUI_MICRO_VERSION,
            [Micro version of MilUI])
AC_DEFINE_UNQUOTED(MILUI_INTERFACE_AGE, $MilUI_INTERFACE_AGE,
            [Interface age of MilUI])
AC_DEFINE_UNQUOTED(MILUI_BINARY_AGE, $MilUI_BINARY_AGE,
            [Binary age of MilUI])

AC_SUBST(VIDEO_SUBDIRS)
AC_SUBST(VIDEO_DRIVERS)
AC_SUBST(SYSTEM_LIBS)
AC_SUBST(BUILD_CFLAGS)
AC_SUBST(BUILD_LDFLAGS)
AC_SUBST(EXTRA_LDFLAGS)

AC_OUTPUT(
Makefile
include/Makefile
include/configs/Makefile
src/Makefile
src/misc/Makefile
src/stdlib/Makefile
src/thread/Makefile
src/thread/pthread/Makefile
src/thread/win32/Makefile
src/thread/dummy/Makefile
src/video/Makefile
src/video/dummy/Makefile
src/video/qvfb/Makefile
src/video/fbcon/Makefile
src/kernel/Makefile
src/kernel/timer/Makefile
src/gdi/Makefile
)

